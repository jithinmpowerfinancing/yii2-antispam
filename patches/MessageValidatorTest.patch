--- vendor/cleantalk/yii2-antispam/tests/MessageValidatorTest.php	2015-06-30 23:24:52
+++ orignial_patch/MessageValidatorTest.php	2024-08-05 20:34:50
@@ -3,19 +3,23 @@
 
 use cleantalk\antispam\Component as CleantalkComponent;
 use cleantalk\antispam\validators\MessageValidator;
-use CleantalkResponse;
-use PHPUnit_Framework_TestCase;
+use Cleantalk\CleantalkResponse;
+use PHPUnit\Framework\TestCase;
 use Yii;
 use yii\base\Model;
 
+// phpunit complaning about session headers already sent ...
+@session_start();
+
 /**
- * @coversDefaultClass \cleantalk\antispam\Api\validators\MessageValidatorTest
+ * @coversDefaultClass \cleantalk\antispam\validators\MessageValidator
  */
-class MessageValidatorTest extends PHPUnit_Framework_TestCase
+class MessageValidatorTest extends TestCase
 {
     protected function setResponse($allow, $message)
     {
-        $mock = $this->getMock(CleantalkComponent::className(), ['sendRequest'], [['apiKey' => CLEANTALK_TEST_API_KEY]]);
+        $mock = $this->createPartialMock(CleantalkComponent::class, ['sendRequest']);
+		$mock->apiKey = CLEANTALK_TEST_API_KEY;
         $mock->expects($this->once())
             ->method('sendRequest')
             ->will(
\ No newline at end of file
@@ -29,38 +33,38 @@
                 )
             );
 
-        Yii::$app->set('antispam', $mock);
-    }
+		Yii::$app->set('antispam', $mock);
+	}
 
-    public function testValidator()
-    {
-        $this->setResponse(0, 'Forbidden');
+	public function testValidator()
+	{
+		$this->setResponse(0, 'Forbidden');
 
-        $model = new FakeModel();
-        $model->message = 'example1';
-        $model->validate();
-        $this->assertTrue($model->hasErrors('message'));
-    }
+		$model = new FakeModel();
+		$model->message = 'example1';
+		$model->validate();
+		$this->assertTrue($model->hasErrors('message'));
+	}
 
-    public function testValidatorAllow()
-    {
-        $this->setResponse(1, '');
+	public function testValidatorAllow()
+	{
+		$this->setResponse(1, '');
 
-        $model = new FakeModel();
-        $model->message = 'example1';
-        $model->validate();
-        $this->assertFalse($model->hasErrors('message'));
-    }
+		$model = new FakeModel();
+		$model->message = 'example1';
+		$model->validate();
+		$this->assertFalse($model->hasErrors('message'));
+	}
 }
 
 class FakeModel extends Model
 {
-    public $message;
+	public $message;
 
-    public function rules()
-    {
-        return [
-            ['message', MessageValidator::className()]
-        ];
-    }
+	public function rules()
+	{
+		return [
+			['message', MessageValidator::className()]
+		];
+	}
 }
\ No newline at end of file
